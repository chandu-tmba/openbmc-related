find_if function 
Returns an iterator to the first element in the range [first, last] for which pred(Unary Function) returns true. If no such element is found, the function returns last.
Function Template :
InputIterator find_if (InputIterator first, InputIterator last, UnaryPredicate pred);

This function is normally used for matching the dbus object path in getsubtree function
sample example : storage.hpp  (bmcweb/redfish/core/lib)

while calling getsubtree method for dbus service 

crow::connections::systemBus->async_method_call(
            [asyncResp,
             driveId](const boost::system::error_code ec,
                      const crow::openbmc_mapper::GetSubTreeType& subtree) {

auto object = std::find_if(
                    subtree.begin(), subtree.end(), [&driveId](auto& object) {
                        const std::string& path = object.first;
                        return boost::ends_with(path, "/" + driveId);
                    });

                if (object == subtree.end())
                {
                    messages::resourceNotFound(asyncResp->res, "Drive", driveId);
                    return;
                }

                const std::string& path = object->first;
                const std::vector<
                    std::pair<std::string, std::vector<std::string>>>&
                    connectionNames = object->second;
